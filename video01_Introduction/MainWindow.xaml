<!--
    x:Class="video01_Introduction.MainWindow" -  specifies   namespace for codebehind
    
    
    
    xmlns - своего рода аналог using, переводится как xml namespace
    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" -
    если убрать эту ссылку, то потеряется связь со списком допустимых в разметке тегов
    их можно будет писать, но среда будет выдвавать ошибку
    
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" -
    "x" is used for mapping this XAML namespace in template for project
    
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" -
    "d" is for design time attributes
    на время работы с окном можно задавать атрибуты. В текущем примере при запуске программы
    будет выводиться огромное окно, но в пространстве дизайнера оно будет иметь заданные характеристики
    
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" -
    "mc" for "mapping compatibility"
-->

<Window
    x:Class="video01_Introduction.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:video01_Introduction"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:video01_Introduction.ViewModel"
    Title="MainWindow"
    d:DesignHeight="300"
    d:DesignWidth="200"
    Loaded="MainWindowLoaded"
    mc:Ignorable="d">

    <Window.Resources>
        <DataTemplate DataType="{x:Type vm:ViewModel}">
            <DockPanel Background="Yellow" />
        </DataTemplate>
        <!--  немного тайных знаний о стиле из будущих уроков Tosker'a  -->
        <Style TargetType="Button">
            <Setter Property="Height" Value="20" />
        </Style>
    </Window.Resources>
    <Grid Name="mainGrid">
        <StackPanel>
            <!--
                Для кнопок в codebehind задан datacontext, в классе есть свойство Name
                к нему можно привязывать текстовые свойства самой кнопки
                quote - data context is nothing more than an information behinder
            -->
            <Button x:Name="Button_1" Content="{Binding Name}" />
            <Button Name="Button_2" Content="{Binding Name}" />
        </StackPanel>
    </Grid>
</Window>
